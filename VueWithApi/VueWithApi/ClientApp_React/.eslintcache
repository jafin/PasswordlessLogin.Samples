[{"d:\\Data\\HPW\\PasswordlessLogin.Samples\\VueWithApi\\VueWithApi\\ClientApp_React\\src\\index.tsx":"1","d:\\Data\\HPW\\PasswordlessLogin.Samples\\VueWithApi\\VueWithApi\\ClientApp_React\\src\\reportWebVitals.ts":"2","d:\\Data\\HPW\\PasswordlessLogin.Samples\\VueWithApi\\VueWithApi\\ClientApp_React\\src\\App.tsx":"3","d:\\Data\\HPW\\PasswordlessLogin.Samples\\VueWithApi\\VueWithApi\\ClientApp_React\\src\\store.ts":"4","d:\\Data\\HPW\\PasswordlessLogin.Samples\\VueWithApi\\VueWithApi\\ClientApp_React\\src\\Routes.tsx":"5","d:\\Data\\HPW\\PasswordlessLogin.Samples\\VueWithApi\\VueWithApi\\ClientApp_React\\src\\api\\api.ts":"6","d:\\Data\\HPW\\PasswordlessLogin.Samples\\VueWithApi\\VueWithApi\\ClientApp_React\\src\\components\\signout\\SignOut.tsx":"7","d:\\Data\\HPW\\PasswordlessLogin.Samples\\VueWithApi\\VueWithApi\\ClientApp_React\\src\\components\\home\\Home.tsx":"8","d:\\Data\\HPW\\PasswordlessLogin.Samples\\VueWithApi\\VueWithApi\\ClientApp_React\\src\\components\\myaccount\\MyAccount.tsx":"9","d:\\Data\\HPW\\PasswordlessLogin.Samples\\VueWithApi\\VueWithApi\\ClientApp_React\\src\\components\\setpassword\\SetPassword.tsx":"10","d:\\Data\\HPW\\PasswordlessLogin.Samples\\VueWithApi\\VueWithApi\\ClientApp_React\\src\\components\\signin\\SignIn.tsx":"11","d:\\Data\\HPW\\PasswordlessLogin.Samples\\VueWithApi\\VueWithApi\\ClientApp_React\\src\\components\\register\\Register.tsx":"12","d:\\Data\\HPW\\PasswordlessLogin.Samples\\VueWithApi\\VueWithApi\\ClientApp_React\\src\\components\\forgotPassword\\ForgotPassword.tsx":"13"},{"size":593,"mtime":1610428702613,"results":"14","hashOfConfig":"15"},{"size":425,"mtime":1610328161004,"results":"16","hashOfConfig":"15"},{"size":1247,"mtime":1610588776090,"results":"17","hashOfConfig":"15"},{"size":2284,"mtime":1610501670278,"results":"18","hashOfConfig":"15"},{"size":992,"mtime":1610584808817,"results":"19","hashOfConfig":"15"},{"size":3841,"mtime":1610587158384,"results":"20","hashOfConfig":"15"},{"size":958,"mtime":1610588745992,"results":"21","hashOfConfig":"15"},{"size":861,"mtime":1610492433195,"results":"22","hashOfConfig":"15"},{"size":385,"mtime":1610517207630,"results":"23","hashOfConfig":"15"},{"size":2569,"mtime":1610518607017,"results":"24","hashOfConfig":"15"},{"size":9645,"mtime":1610587827139,"results":"25","hashOfConfig":"15"},{"size":3643,"mtime":1610587690205,"results":"26","hashOfConfig":"15"},{"size":2488,"mtime":1610543367129,"results":"27","hashOfConfig":"15"},{"filePath":"28","messages":"29","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"30"},"1acp936",{"filePath":"31","messages":"32","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"30"},{"filePath":"33","messages":"34","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"30"},{"filePath":"35","messages":"36","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"30"},{"filePath":"37","messages":"38","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"30"},{"filePath":"39","messages":"40","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"30"},{"filePath":"41","messages":"42","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"30"},{"filePath":"43","messages":"44","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"30"},{"filePath":"45","messages":"46","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"30"},{"filePath":"47","messages":"48","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"49","messages":"50","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"30"},{"filePath":"51","messages":"52","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"53","usedDeprecatedRules":"30"},{"filePath":"54","messages":"55","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"56","usedDeprecatedRules":"30"},"d:\\Data\\HPW\\PasswordlessLogin.Samples\\VueWithApi\\VueWithApi\\ClientApp_React\\src\\index.tsx",[],["57","58"],"d:\\Data\\HPW\\PasswordlessLogin.Samples\\VueWithApi\\VueWithApi\\ClientApp_React\\src\\reportWebVitals.ts",[],"d:\\Data\\HPW\\PasswordlessLogin.Samples\\VueWithApi\\VueWithApi\\ClientApp_React\\src\\App.tsx",[],"d:\\Data\\HPW\\PasswordlessLogin.Samples\\VueWithApi\\VueWithApi\\ClientApp_React\\src\\store.ts",[],"d:\\Data\\HPW\\PasswordlessLogin.Samples\\VueWithApi\\VueWithApi\\ClientApp_React\\src\\Routes.tsx",[],"d:\\Data\\HPW\\PasswordlessLogin.Samples\\VueWithApi\\VueWithApi\\ClientApp_React\\src\\api\\api.ts",[],"d:\\Data\\HPW\\PasswordlessLogin.Samples\\VueWithApi\\VueWithApi\\ClientApp_React\\src\\components\\signout\\SignOut.tsx",[],"d:\\Data\\HPW\\PasswordlessLogin.Samples\\VueWithApi\\VueWithApi\\ClientApp_React\\src\\components\\home\\Home.tsx",[],"d:\\Data\\HPW\\PasswordlessLogin.Samples\\VueWithApi\\VueWithApi\\ClientApp_React\\src\\components\\myaccount\\MyAccount.tsx",[],"d:\\Data\\HPW\\PasswordlessLogin.Samples\\VueWithApi\\VueWithApi\\ClientApp_React\\src\\components\\setpassword\\SetPassword.tsx",[],"d:\\Data\\HPW\\PasswordlessLogin.Samples\\VueWithApi\\VueWithApi\\ClientApp_React\\src\\components\\signin\\SignIn.tsx",[],"d:\\Data\\HPW\\PasswordlessLogin.Samples\\VueWithApi\\VueWithApi\\ClientApp_React\\src\\components\\register\\Register.tsx",["59","60"],"import { useState, useRef, useMemo, useEffect } from \"react\";\r\nimport api from \"../../api/api\";\r\n\r\nexport const Register = function () {\r\n  const [emailError, setEmailError] = useState<string>(\"\");\r\n  const [email, setEmail] = useState<string>('');\r\n  const [consent, setConsent] = useState<boolean>(false);\r\n  const [message, setMessage] = useState<string>(\"\");\r\n  const [nextUrl, setNextUrl] = useState<string>(\"\");\r\n\r\n  const submitForm = function (evt: React.FormEvent<HTMLFormElement>): void {\r\n    evt.preventDefault();\r\n    setMessage(\"Please wait...\");\r\n    api\r\n      .register(email, nextUrl)\r\n      .then((data) => {\r\n        setMessage(data.message ? data.message : \"Success\");\r\n      })\r\n      .catch((error) => {\r\n        setMessage(error.message ? error.message : \"Something went wrong\");\r\n      });\r\n  };\r\n\r\n  const emailEl = useRef<HTMLInputElement>(null);\r\n\r\n  const emailIsValid = useMemo<boolean>(() => {\r\n    if (email.length === 0) {\r\n      return false;\r\n    }\r\n    var testEl = document.createElement(\"input\");\r\n    testEl.type = \"email\";\r\n    testEl.value = email;\r\n    const valid = testEl.checkValidity();\r\n    return valid;\r\n  }, [email]);\r\n\r\n  const isSubmitDisabled = useMemo<boolean>(() => {\r\n    return !emailIsValid || !consent;\r\n  }, [emailIsValid, consent]);\r\n\r\n  useEffect(() => {\r\n    emailEl.current.focus();\r\n  }, []);\r\n\r\n  return (\r\n    <div className=\"focusBox\">\r\n      <h2>Register</h2>\r\n      <div className=\"register\">\r\n        <form className=\"form\" onSubmit={submitForm}>\r\n          <div className=\"field field-stacked form_row\">\r\n            <label className=\"field_label\" htmlFor=\"email\">\r\n              Email\r\n            </label>\r\n            <input\r\n              className=\"field_element field_element-fullWidth register_email\"\r\n              ref={emailEl}\r\n              id=\"email\"\r\n              value={email}\r\n              onChange={(e) => setEmail(e.target.value)}\r\n              v-model=\"email\"\r\n              type=\"text\"\r\n              placeholder=\"you@example.com\"\r\n            />\r\n            <span v-if=\"emailError\" className=\"field_error\">\r\n              {emailError}\r\n            </span>\r\n          </div>\r\n          <div className=\"field field-checkbox form_row\">\r\n            <input\r\n              className=\"field_element\"\r\n              type=\"checkbox\"\r\n              id=\"consent\"\r\n              checked={consent}\r\n              onChange={(e) => setConsent(e.target.checked)}\r\n            />\r\n            <label\r\n              className=\"field_label register_consentLabel\"\r\n              htmlFor=\"consent\"\r\n            >\r\n              I consent to the{\" \"}\r\n              <a href=\"/privacy\" target=\"_blank\">\r\n                privacy policy\r\n              </a>{\" \"}\r\n              and{\" \"}\r\n              <a href=\"/terms\" target=\"_blank\">\r\n                terms of service\r\n              </a>\r\n              .\r\n            </label>\r\n          </div>\r\n          <pre>\r\n            validEmail: {emailIsValid ? \"yes\" : \"no\"} <br />\r\n            consent: {consent ? \"yes\" : \"no\"}\r\n          </pre>\r\n          disabled: {isSubmitDisabled ? \"yes\" : \"no\"}\r\n          <div className=\"field form_row\">\r\n            <button\r\n              type=\"submit\"\r\n              disabled={isSubmitDisabled}\r\n              className=\"field_element field_element-fullWidth field_element-tall register_button\"\r\n            >\r\n              Register\r\n            </button>\r\n          </div>\r\n          {message && (\r\n            <div className=\"message message-notice register_message\">\r\n              {message}\r\n            </div>\r\n          )}\r\n        </form>\r\n      </div>\r\n    </div>\r\n  );\r\n};\r\n","d:\\Data\\HPW\\PasswordlessLogin.Samples\\VueWithApi\\VueWithApi\\ClientApp_React\\src\\components\\forgotPassword\\ForgotPassword.tsx",["61"],"import { useState, useMemo, useEffect, useRef } from \"react\";\r\nimport api from \"../../api/api\";\r\n\r\nexport const ForgotPassword = () => {\r\n  const [message, setMessage] = useState<string>(\"\");\r\n  const [email, setEmail] = useState<string>(\"\");\r\n  const [emailError, setEmailError] = useState<string>(\"\");\r\n\r\n  const submitForm = (evt: React.FormEvent<HTMLFormElement>) => {\r\n    evt.preventDefault();\r\n    setMessage(\"Please wait...\");\r\n    api\r\n      .sendPasswordResetMessage(email, \"/\")\r\n      .then((data) => {\r\n        setMessage(data.message ? data.message : \"Success\");\r\n      })\r\n      .catch((error) => {\r\n        setMessage(error.message ? error.message : \"Something went wrong\");\r\n      });\r\n  };\r\n\r\n\r\n  const emailEl = useRef<HTMLInputElement>(null);\r\n  \r\n  useEffect(() => {\r\n    emailEl.current.focus();\r\n  }, []);\r\n\r\n  const emailIsValid = useMemo<boolean>(() => {\r\n    if (email.length === 0) {\r\n      return false;\r\n    }\r\n    var testEl = document.createElement(\"input\");\r\n    testEl.type = \"email\";\r\n    testEl.value = email;\r\n    return testEl.checkValidity();\r\n  }, [email]);\r\n\r\n  return (\r\n    <div className=\"focusBox\">\r\n      <h2>Forgot Password</h2>\r\n      <div className=\"forgotPassword\">\r\n        <form className=\"form\" onSubmit={submitForm}>\r\n          <div className=\"field field-stacked form_row\">\r\n            <label className=\"field_label\" htmlFor=\"email\">\r\n              Email\r\n            </label>\r\n            <input\r\n              className=\"field_element field_element-fullWidth register_email\"\r\n              id=\"email\"\r\n              ref={emailEl}\r\n              value={email}\r\n              onChange={(e) => setEmail(e.target.value)}\r\n              type=\"text\"\r\n              placeholder=\"you@example.com\"\r\n            />\r\n            {emailError && (\r\n              <span v-if=\"emailError\" className=\"field_error\">\r\n                {emailError}\r\n              </span>\r\n            )}\r\n          </div>\r\n\r\n          <div className=\"field form_row\">\r\n            <button\r\n              disabled={!emailIsValid}\r\n              type=\"submit\"\r\n              className=\"field_element field_element-fullWidth field_element-tall forgotPassword_button\"\r\n            >\r\n              Get Password Reset Link\r\n            </button>\r\n          </div>\r\n          {message && (\r\n            <div className=\"message message-notice register_message\">\r\n              {message}\r\n            </div>\r\n          )}\r\n        </form>\r\n      </div>\r\n    </div>\r\n  );\r\n};\r\n",{"ruleId":"62","replacedBy":"63"},{"ruleId":"64","replacedBy":"65"},{"ruleId":"66","severity":1,"message":"67","line":5,"column":22,"nodeType":"68","messageId":"69","endLine":5,"endColumn":35},{"ruleId":"66","severity":1,"message":"70","line":9,"column":19,"nodeType":"68","messageId":"69","endLine":9,"endColumn":29},{"ruleId":"66","severity":1,"message":"67","line":7,"column":22,"nodeType":"68","messageId":"69","endLine":7,"endColumn":35},"no-native-reassign",["71"],"no-negated-in-lhs",["72"],"@typescript-eslint/no-unused-vars","'setEmailError' is assigned a value but never used.","Identifier","unusedVar","'setNextUrl' is assigned a value but never used.","no-global-assign","no-unsafe-negation"]